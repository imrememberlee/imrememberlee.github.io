<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment WritingHexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。1234布局 路径post source/_postspage sourcedraft source/_drafts 12$ hexo new [layout] &lt;title&gt;$ hexo new page 'categories' categories123categories:- [Linux]- [Tools] 123categories:- [Linux, Hexo]- [Tools, PHP] 12345678910&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;标签参数title : 曲目标题author: 曲目作者url: 音乐文件 URL 地址picture_url: (可选) 音乐对应的图片地址narrow: （可选）播放器袖珍风格autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能width:xxx: (可选) 播放器宽度 (默认: 100%)lrc:xxx: （可选）歌词文件 URL 地址]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[gvm安装go]]></title>
    <url>%2F2018%2F11%2F07%2Fgvm%E5%AE%89%E8%A3%85go%2F</url>
    <content type="text"><![CDATA[gvm安装gogvm是第三方开发的Go多版本管理工具，类似ruby里面的rvm工具，node.js里面的nvm工具。使用起来相当的方便，安装gvm使用如下命令：1bash &lt; &lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer) Or if you are using zsh just change bash with zsh 由于大家都懂得原因需要先修改镜像来下载安装包可将 GO_SOURCE_URL修改为github上的源码镜像12vim ~/.gvm/scripts/install&quot; GO_SOURCE_URL=https://go.googlecode.com &quot; 修改为 &quot; GO_SOURCE_URL=https://github.com/golang/go &quot; 安装1.5之后的版本需要先安装1.4版本1234gvm install go1.4 -Bgvm use go1.4export GOROOT_BOOTSTRAP=$GOROOTgvm install go1.8.3 设置默认使用的go版本1gvm use go1.8.3 --default Mac OS X Requirements123xcode-select --installbrew updatebrew install mercurial Debian/Ubuntu Requirements1sudo apt-get install curl git mercurial make binutils bison gcc build-essential]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[gitemoji中文对照表]]></title>
    <url>%2F2018%2F10%2F24%2Fgitemoji%E4%B8%AD%E6%96%87%E5%AF%B9%E7%85%A7%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[gitemoji中文对照表 调色板 :art: – 改进结构和代码格式1- 闪电 :zap: – 优化性能 ```:zap: 火焰 :fire: – 移除代码或文件1- bug :bug: – 修复 bug```:bug: 救护车 :ambulance: – 紧急修复1- 星星 :sparkles: – 引入新功能```:sparkles: 备忘录 :memo: – 写文档1- 火箭 :rocket: – 部署新功能```:rocket: 口红 :lipstick: – 升级 UI 和样式文件1- 礼花 :tada: – 初次提交```:tada: 完成 :white_check_mark: – 添加测试用例1- 锁 :lock:– 修复安全问题```:lock: 苹果 :apple: – 修复 MacOS 下的问题1- 企鹅 :penguin: – 修复 Linux 下的问题```:penguin: 旗帜 :checkered_flag: – 修复 Windows 下的问题1- 书签 :bookmark: – 发版/版本标签```:bookmark: 警车灯 :rotating_light: – 移除 linter 的警告1- 施工 :construction: – 工作在进行中```:construction: 绿心 :green_heart: – 修复 CI 构建问题1- 下降 :arrow_down: – 降级依赖库```:arrow_down: 上升 :arrow_up: – 升级依赖库1- 工人 :construction_worker: – 添加 CI 构建系统```:construction_worker: 扳手 :wrench: – 改变配置文件1- 锤子 :hammer: – 大重构```:hammer: 原项目链接]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
</search>
